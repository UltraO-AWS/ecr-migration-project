name: ECR_MIGRATION
on: 
  workflow_dispatch:
    inputs:
      repository_name:
        description: 'Repository On Source Account'
        type: string
        required: true

env:
    TAG_VALUE: ${{ vars.TAG_VALUE }}
    TAG_KEY: ${{ vars.TAG_KEY }}
    ACCOUNT_ID_SOURCE: ${{ vars.ACCOUNT_ID_SOURCE }}
    ACCOUNT_ID_DESTINATION: ${{ vars.ACCOUNT_ID_DESTINATION }}
    REGION_SOURCE: ${{ vars.REGION_SOURCE }}
    REGION_DESTINATION: ${{ vars.REGION_DESTINATION }}
    IMAGES_EXISTS: false

jobs:
  pull-images:
    runs-on: [self-hosted, ecr-runner]
    permissions:
      id-token: write
      contents: read
    outputs:
      TAG_VARIABLE: ${{ steps.check-images.outputs.TAG_VARIABLE }}
    steps:

      # AWS Configure Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::$ACCOUNT_ID_SOURCE:role/ECRAccessForGiHubActions

      # AWS ECR Login
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Check All Images
      - name: Check All Images For Repository - ${{ github.event.inputs.repository_name }}
        id: check-images
        run: |
          echo "************ STARTING ECR MIGRATION ************"
          
          TAG_VARIABLE=$(aws ecr list-images --repository-name $REPO_NAME --query 'imageIds[].imageTag' --output text)

          if [[ -z "$TAG_VARIABLE" ]]; then

              echo "************ ECR Repository - $REPO_NAME on account $ACCOUNT_ID_SOURCE has no Images - Nothing to Migrate ************" >> migration_no_images.log
              echo "************ END ************" >> migration_no_images.log
              echo "************ END - CHECK MIGRATION LOG FOR MORE INFO ************"

          else
              echo "************ Starting ECR Migration for repo $REPO_NAME on account $ACCOUNT_ID_DESTINATION ************" >> migration.log
              echo "IMAGES_EXISTS=true" >> $GITHUB_ENV
              echo "TAG_VARIABLE=$TAG_VARIABLE" >> $GITHUB_OUTPUT
              for tag in $TAG_VARIABLE; 
                do
                    echo "Pulling $tag"
                    echo "************ Pulling Image $REPO_NAME:$tag! ************" >> migration.log
                    docker pull $ACCOUNT_ID_SOURCE.dkr.ecr.$REGION_SOURCE.amazonaws.com/$REPO_NAME:$tag
                    echo "************ $REPO_NAME:$tag Pulled to local! ************" >> migration.log
                done
              echo "************ All Images for Repository $REPO_NAME on account $REGION_SOURCE are Pulled! ************" >> migration.log

  tag-images:
    if: ${{ IMAGES_EXISTS == 'true' }}
    needs: [pull-images]
    env:
      TAG_VARIABLE: ${{ needs.pull-images.outputs.TAG_VARIABLE }}
    runs-on: [self-hosted, ecr-runner]
    permissions:
      id-token: write
      contents: read
    steps:
      # Tag All Images
      - name: Update Tags
        run: |
          
          for tag in $TAG_VARIABLE; 
          do
              echo "Update $tag"
              docker tag $ACCOUNT_ID_SOURCE.dkr.ecr.$REGION_SOURCE.amazonaws.com/$REPO_NAME:$tag $ACCOUNT_ID_DESTINATION.dkr.ecr.$REGION_DESTINATION.amazonaws.com/$REPO_NAME:$tag           
          done
          echo "************ Tags Updated for All Images! ************" >> migration.log

  push-images:
    if: ${{ IMAGES_EXISTS == 'true' }}
    needs: [pull-images, tag-images]
    env:
      TAG_VARIABLE: ${{ needs.pull-images.outputs.TAG_VARIABLE }}
    runs-on: [self-hosted, ecr-runner]
    steps:
      # AWS Configure Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::$ACCOUNT_ID_DESTINATION:role/ECRAccessForGiHubActions-General

      # AWS ECR Login
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      # Push Images
      - name: Push Images
        run: |
          echo "************ Create ECR Repository - $REPO_NAME on account $ACCOUNT_ID_DESTINATION ************" >> migration.log
          aws ecr create-repository --repository-name $REPO_NAME --region $REGION_DESTINATION --image-tag-mutability MUTABLE --encryption-configuration encryptionType=AES256 --image-scanning-configuration scanOnPush=false --tags Key=$TAG_KEY,Value=$TAG_VALUE
          
          for tag in $TAG_VARIABLE; 
          do
              echo "Push $tag"
              docker push $ACCOUNT_ID_DESTINATION.dkr.ecr.$REGION_DESTINATION.amazonaws.com/$REPO_NAME:$tag
              echo "************ Image $ACCOUNT_ID_DESTINATION.dkr.ecr.$REGION_DESTINATION.amazonaws.com/$REPO_NAME:$tag Pushed to Account $ACCOUNT_ID_DESTINATION! ************" >> migration.log
          done
          echo "************ All Images Pushed to Account $ACCOUNT_ID_DESTINATION! ************" >> migration.log
          echo "************ END - CHECK MIGRATION LOG FOR MORE INFO ************"